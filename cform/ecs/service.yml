Description: >
    ECS service that serves Microservice Containers.

Parameters: 

    MicroserviceName:
        Description: A microservice name that will be prefixed to resource names
        Type: String

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id
        
    Cluster:
        Description: ECS Cluster ID that this service should run on
        Type: String

    DesiredCount: 
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 1

    Listener:
        Description: The Application Load Balancer listener to register with
        Type: String

    Path: 
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: prod/

    Image: 
        Description: Docker Image to run
        Type: String

    Color:
        Description: Heap Color
        Type: String
        AllowedValues: 
            - GREEN
            - BLUE

    Priority:
        Description: Litener Rule Priority
        Type: Number

    ESURL: 
        Description: URL of ElasticSearch Service
        Type: String

    ECSServiceRole:
        Description: IAM Role for running ECS Service
        Type: String
        Default: ecsServiceRoleCustom

Resources:

    Service:
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties: 
            Cluster: !Ref Cluster
            Role: !Ref ECSServiceRole
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            PlacementStrategies :
                - Type: random
            LoadBalancers: 
                - ContainerName: !Sub ${MicroserviceName}-microservice
                  ContainerPort: 5000
                  TargetGroupArn: !Ref TargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: !Sub ${MicroserviceName}-microservice
            ContainerDefinitions:
                - Name:  !Sub ${MicroserviceName}-microservice
                  Essential: true
                  Image: !Ref Image
                  Memory: 300
                  Cpu: 2048
                  PortMappings:
                    - ContainerPort: 5000
                      HostPort: 5000
                      Protocol: tcp
                    - ContainerPort: 5050
                      HostPort: 5050
                      Protocol: tcp
                  Environment:
                    - Name: esNodes
                      Value: !Ref ESURL

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 5000
            Protocol: HTTP
            Matcher: 
                HttpCode: 200-299
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /elb-hc
            HealthCheckPort: 5050
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
    
    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref Listener
            Priority: !Ref Priority
            Conditions:
                - Field: path-pattern
                  Values: 
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward
