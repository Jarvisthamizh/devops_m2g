Description: >
    Master Template for Deployng SM Microservice 
    
Parameters:
    
    Deploy:
        Description: What to deploy GREEN, BLUE, or BOTH (ES update is under construction)
        Type: String
        AllowedValues: 
            - GREEN
            - BLUE
            - BOTH
            - ES

    GreenImage:
        Description: Full name of the Contaner Image for GREEN Deployment
        Type: String
        Default: ''
        
    BlueImage:
        Description: Full name of the Contaner Image for BLUE Deployment
        Type: String
        Default: ''

    GreenPriority:
        Description: Priority of the GREEN ASG Listener Rule
        Type: Number
        Default: 0
        
    BluePriority:
        Description: Priority of the BLUE ASG Listener Rule
        Type: Number
        Default: 0

    GreenPath:
        Description: Path pattern of the GREEN URL
        Type: String
        Default: /
        
    BluePath:
        Description: Path pattern of the BLUE URL
        Type: String
        Default: /
        
    HomeVPC:
        Description: VPC in which microservice resources will be created. If empty a new one will be created.
        Type: String
        Default: ""

    Subnets:
        Description: two subnets in which microservice will operate
        Type: String

    ImageID:
        Description: Basic AMI Image of the Microservice
        Type: String

    LoadBalancerSecurityGroup:
        Description: Security Group to use for Application Load Balancer
        Type: String

    ECSHostSecurityGroup:
        Description: Security Group to use for ECS Hosts
        Type: String

    ESServiceSecurityGroup:
        Description: Security Group to use ECS Service
        Type: String

    ECSInstanceRole:
        Description: IAM Role for EC2 for Amazon EC2 Container Service
        Type: String
        Default: ecsInstanceRole

    ECSServiceRole:
        Description: IAM Role for running ECS Service
        Type: String
        Default: ecsServiceRoleCustom

Conditions:

    DeployGreen: !Or
        - !Equals [ !Ref Deploy, "GREEN" ]
        - !Equals [ !Ref Deploy, "BOTH" ]
        
    DeployBlue: !Or
        - !Equals [ !Ref Deploy, "BLUE" ]
        - !Equals [ !Ref Deploy, "BOTH" ]
        
    DeployES: !Equals [ !Ref Deploy, "ES" ]

    CreateVPC: !Equals [ !Ref HomeVPC, "" ]
    
Resources:

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/cf-templates-14qbvrg0q2lct-us-west-1/sm-cfn/infra/load-balancers.yml'
            Parameters:
                MicroserviceName: !Ref AWS::StackName
                VPC: !Ref HomeVPC
                Subnets: !Ref Subnets
                SecurityGroup: !Ref LoadBalancerSecurityGroup

    ElasticSearch:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/cf-templates-14qbvrg0q2lct-us-west-1/sm-cfn/es/es-domain.yml'
            Parameters:
                MicroserviceName: !Ref AWS::StackName
                ElasticsearchVersion: '5.5'
                InstanceType: m4.4xlarge.elasticsearch
                Subnets: !Ref Subnets
                SecurityGroup: !Ref ESServiceSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/cf-templates-14qbvrg0q2lct-us-west-1/sm-cfn/ecs/cluster.yml'
            Parameters:
                MicroserviceName: !Ref AWS::StackName

    # !GetAtt ElasticSearch.Outputs.ESDomainEndpoint
    GreenHeap:
        Type: AWS::CloudFormation::Stack
        Condition: DeployGreen
        Properties:
            TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/cf-templates-14qbvrg0q2lct-us-west-1/sm-cfn/ecs/heap.yml'
            Parameters:
                MicroserviceName: !Ref AWS::StackName
                InstanceType: m4.large
                ClusterSize: 1
                MaxClusterSize: 100
                VPC: !Ref HomeVPC
                SecurityGroup: !Ref ECSHostSecurityGroup
                Subnets: !Ref Subnets
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 1
                Listener: !GetAtt ALB.Outputs.Listener 
                Path: !Ref GreenPath
                Image: !Ref GreenImage
                Color: GREEN
                Priority: !Ref GreenPriority
                ESURL: 'www.example.com'
                ImageID: !Ref ImageID
                ECSInstanceRole: !Ref ECSInstanceRole
                ECSServiceRole: !Ref ECSServiceRole

    
    BlueHeap:
        Type: AWS::CloudFormation::Stack
        Condition: DeployBlue
        Properties:
            TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/cf-templates-14qbvrg0q2lct-us-west-1/sm-cfn/ecs/heap.yml'
            Parameters:
                MicroserviceName: !Ref AWS::StackName
                InstanceType: m4.large
                ClusterSize: 1
                MaxClusterSize: 100
                VPC: !Ref HomeVPC
                SecurityGroup: !Ref ECSHostSecurityGroup
                Subnets: !Ref Subnets
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 1
                Listener: !GetAtt ALB.Outputs.Listener 
                Path: !Ref BluePath
                Image: !Ref BlueImage
                Color: BLUE
                Priority: !Ref BluePriority
                ESURL: 'www.example.com'
                ImageID: !Ref ImageID
                ECSInstanceRole: !Ref ECSInstanceRole
                ECSServiceRole: !Ref ECSServiceRole

Outputs:

    MicroserviceUrl: 
        Description: The URL endpoint for the microservice
        Value: !GetAtt ALB.Outputs.LoadBalancerUrl
