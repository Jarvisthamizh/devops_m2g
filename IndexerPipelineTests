// --------------------------------------
//
// global reusable definitions
//
// --------------------------------------
def msbuild          	= { configuration -> bat "\"${tool 'msbuildWinWorker2'}\" Indexer.sln /m /t:rebuild /p:Configuration=$configuration /p:Platform=\"Any CPU\" /p:ProductVersion=1.0.0.${env.BUILD_NUMBER}" }
def restore				= { configuration -> bat "\"${tool 'msbuildWinWorker2'}\" Indexer.sln /p:Configuration=$configuration /m /t:restore"}
//def publish				= { configuration -> bat "\"${tool 'msbuildWinWorker2'}\" Indexer.sln /p:Configuration=$configuration /m /t:PublishOutput /p:OutputPath=bin\\Release\\PublishOutput"}
//def publish				= { configuration -> bat "\"${tool 'msbuildWinWorker2'}\" Indexer.sln /p:Configuration=$configuration /m /t:publish"}
def publish				= { configuration -> bat "\"${tool 'msbuildWinWorker2'}\" Indexer.sln /m /p:OutputPath=bin\\$configuration\\PublishOutput /t:publish /p:Configuration=$configuration /p:Platform=\"Any CPU\"  "}
//def workspace        	= 'W:\\lhaikin\\for-aviv\\interop'
def unittestsdir     	= 'projects\\XUnitTestProject1'
def unittestOutFile  	= 'xunit.out.xml'

// --------------------------------------
//
// the pipeline 
//
// --------------------------------------
pipeline { 
  agent {
    node {
      label 'builder-WN2012R2-1'
      //customWorkspace workspace
    }
  }
  
  options {
    skipDefaultCheckout true
    timeout(time: 1, unit: 'HOURS') 
    timestamps()
  }
  
  triggers { pollSCM('*/1 * * * *') }
  
  stages { 
    stage('clean workspace') {
      steps {
        step([$class: 'WsCleanup'])
      }
    }
    
    stage('clone repo') {
      steps {
        checkout scm
      }
    }
    
    stage('restore-packages') { 
       steps {
		script {
		  restore "release"
		  }
		}
    }
    /*
    stage('build') { 
      steps {
        script {
          msbuild "debug"
        }
      }
    }
    */
	stage('publish') {
	  steps {
	    script {
		  publish "release"
		}
	  }	  
	}
	stage('copy-publish-of-indexer') {
	  steps {
		  bat 'xcopy /y /v /e "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Indexer\\bin\\release\\PublishOutputpublish" "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Indexer\\bin\\release\\PublishOutput"'
	  }	  
	}
	stage('copy-publish-of-ConfigIndexerHost') {
	  steps {
		  bat 'xcopy /y /v /e "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\ConfigIndexerHost\\bin\\release\\PublishOutputpublish" "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\ConfigIndexerHost\\bin\\release\\PublishOutput"'
	  }	  
	}
	stage('copy-publish-of-IndexerUnitTest') {
	  steps {
		  bat 'xcopy /y /v /e "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\IndexerUnitTest\\bin\\release\\PublishOutputpublish" "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\IndexerUnitTest\\bin\\release\\PublishOutput"'
	  }	  
	}
	stage('delete-extra-publish-in-workspace') {
	  steps {
		  bat 'del /q "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Indexer\\bin\\release\\PublishOutputpublish"'
		  bat 'rmdir /q /s "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Indexer\\bin\\release\\PublishOutputpublish"'
		  bat 'del /q "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\ConfigIndexerHost\\bin\\release\\PublishOutputpublish"'
		  bat 'rmdir /q /s "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\ConfigIndexerHost\\bin\\release\\PublishOutputpublish"'
		  bat 'del /q "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\IndexerUnitTest\\bin\\release\\PublishOutputpublish"'
		  bat 'rmdir /q /s "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\IndexerUnitTest\\bin\\release\\PublishOutputpublish"'
	  }	  
	}
	stage('copy-installer-to-x:') {
	  steps {
	    bat '"C:\\Program Files (x86)\\NSIS\\makensis.exe" C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Installer\\indexerInstallerScript.nsi'
	    bat 'mkdir "X:\\software\\Microservices\\Indexer\\Ver1.0.1\\Build-${env.BUILD_NUMBER}\\"'
	    bat 'copy "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Installer\\Indexer-1.0.0.0-Installer.exe" "X:\\software\\Microservices\\Indexer\\Ver1.0.1\\Build-${env.BUILD_NUMBER}\\"'
	   bat 'exit'
	  }	  
	}
	stage('copy-publish-to-x:') {
	  steps {
	    bat 'mkdir "X:\\software\\Microservices\\Indexer\\Ver1.0.1\\Build-${env.BUILD_NUMBER}\\PublishOutput"'
	    bat 'xcopy  /y /v /e "C:\\Jenkins\\workspace\\indexer-microservice-build-ver-1.2.0\\Indexer\\bin\\Release\\PublishOutput\\*" "X:\\software\\Microservices\\Indexer\\Ver1.0.1\\Build-${env.BUILD_NUMBER}\\PublishOutput"'
	    bat 'exit'
	  }
	}
	stage('docker-build-')
  }
}